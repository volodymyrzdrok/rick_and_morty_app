{"version":3,"file":"static/js/614.205eda62.chunk.js","mappings":"0RAuDA,EAjDyB,WAAO,IAAD,EAC7B,GAAwCA,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAUC,EAAAA,EAAAA,MAAVD,MACAE,GAAgBC,EAAAA,EAAAA,MAAhBD,YACR,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAmB,mCAAG,WAAMC,GAAN,8EAC1BF,GAAa,GADa,mBAGLG,EAAAA,EAAAA,IAAe,CAACD,IAHX,OAGlBE,EAHkB,OAKxBV,EAAgBU,EAAKC,MALG,gDAOxBC,QAAQC,IAAR,MAPwB,yBASxBP,GAAa,GATW,4EAAH,sDAiBzB,IAJAR,EAAAA,EAAAA,WAAS,WACPS,EAAoBJ,EACrB,GAAE,KAEEJ,EAAc,OAAO,KAE1B,IACEe,EAGEf,EAHFe,MACAC,EAEEhB,EAFFgB,KAKF,OACE,4BACE,SAAC,KAAD,CAASC,GAAE,iBAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAOgB,wBAAT,QAA6BC,EAAAA,EAAAA,KAAxC,UACE,2CAEDb,GACC,SAACc,EAAA,EAAD,KAEA,iCACE,uBAAIJ,KACJ,gBAAKK,IAAKN,EAAOO,IAAI,cAK9B,EC3CD,EARsB,WACpB,OACE,+BACE,SAAC,EAAD,KAGL,C,mJCHM,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEgBC,EAAAA,EAAAA,IAAA,cAFhB,cAEGb,EAFH,yBAIIA,EAAKC,KAAKa,KAAKC,OAJnB,gCAMHb,QAAQc,MAAR,MANG,gFAUA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BkB,GAA9B,4FAAwCC,EAAxC,+BAA+C,EAA/C,kBAEgBL,EAAAA,EAAAA,IAAA,qBAAwBI,EAAxB,iBAAyCC,EAAzC,OAFhB,cAEGlB,EAFH,yBAKIA,GALJ,gCAOHE,QAAQc,MAAR,MAPG,iFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAoCd,GAApC,gGAGKQ,EAAAA,EAAAA,IAAA,oDAAuDR,EAAvD,OAHL,cAEGL,EAFH,yBAKIA,GALJ,gCAOHE,QAAQc,MAAR,MAPG,gFAvBPH,EAAAA,EAAAA,SAAAA,QAFc,iC","sources":["components/CharacterDetails/CharacterDetails.js","pages/InfoCharacter/InfoCharacter.js","services/apiService.js"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport { NavLink, useLocation, useParams } from 'react-router-dom';\nimport { fetchCHaracter } from 'services/apiService';\nimport routes from 'utils/routes';\n\nconst CharacterDetails = () => {\n  const [characterObj, setCharacterObj] = useState(null);\n  const { state } = useLocation();\n  const { characterId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getCharacterDetails = async id => {\n    setIsLoading(true);\n    try {\n      const resp = await fetchCHaracter([id]);\n      // console.log('resp :', resp);\n      setCharacterObj(resp.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useState(() => {\n    getCharacterDetails(characterId);\n  }, []);\n\n  if (!characterObj) return null;\n\n  const {\n    image,\n    name,\n    // gender, id, species, type, origin\n  } = characterObj;\n  // console.log('origin :', origin);\n\n  return (\n    <div>\n      <NavLink to={state?.prevLocationPath ?? routes.home}>\n        <button> go back</button>\n      </NavLink>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <p>{name}</p>\n          <img src={image} alt=\"name\" />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CharacterDetails;\n","import CharacterDetails from 'components/CharacterDetails/CharacterDetails';\n\nconst InfoCharacter = () => {\n  return (\n    <>\n      <CharacterDetails />\n    </>\n  );\n};\n\nexport default InfoCharacter;\n","import axios from 'axios';\nconst MAIN_URL = `https://rickandmortyapi.com/api`;\n\naxios.defaults.baseURL = MAIN_URL;\n\nexport async function fetchTotalCountUsers() {\n  try {\n    const resp = await axios.get(`/character`);\n\n    return resp.data.info.count;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCHaracter(arrUsers, page = 1) {\n  try {\n    const resp = await axios.get(`/character/${arrUsers}?page=${page}\n`);\n\n    return resp;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCHaracterByName(name) {\n  try {\n    const resp =\n      await axios.get(`/character/?gender=&status=&species=&name=${name}\n`);\n    return resp;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["useState","characterObj","setCharacterObj","state","useLocation","characterId","useParams","isLoading","setIsLoading","getCharacterDetails","id","fetchCHaracter","resp","data","console","log","image","name","to","prevLocationPath","routes","Loader","src","alt","fetchTotalCountUsers","axios","info","count","error","arrUsers","page","fetchCHaracterByName"],"sourceRoot":""}