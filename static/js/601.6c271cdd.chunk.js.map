{"version":3,"file":"static/js/601.6c271cdd.chunk.js","mappings":"iRACA,EAA4B,oCAA5B,EAAgF,wCAAhF,EAA8H,8BAA9H,EAAoK,gCAApK,EAA2N,+CAA3N,EAAqR,mCAArR,EAA+T,+BAA/T,EAAqW,+BAArW,EAA2Y,+BAA3Y,EAAkb,gC,SCgFlb,EA1EyB,WAAO,IAAD,EAC7B,GAAwCA,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAUC,EAAAA,EAAAA,MAAVD,MACAE,GAAgBC,EAAAA,EAAAA,MAAhBD,YACR,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAmB,mCAAG,WAAMC,GAAN,8EAC1BF,GAAa,GADa,mBAGLG,EAAAA,EAAAA,IAAe,CAACD,IAHX,OAGlBE,EAHkB,OAKxBV,EAAgBU,EAAKC,MALG,gDAOxBC,QAAQC,IAAR,MAPwB,yBASxBP,GAAa,GATW,4EAAH,sDAiBzB,IAJAR,EAAAA,EAAAA,WAAS,WACPS,EAAoBJ,EACrB,GAAE,KAEEJ,EAAc,OAAO,KAE1B,IAAQe,EAAuDf,EAAvDe,MAAOC,EAAgDhB,EAAhDgB,KAAMC,EAA0CjB,EAA1CiB,OAAQC,EAAkClB,EAAlCkB,QAASC,EAAyBnB,EAAzBmB,KAAMC,EAAmBpB,EAAnBoB,OAAQC,EAAWrB,EAAXqB,OAEpD,OACE,4BACE,UAAC,KAAD,CACEC,UAAWC,EACXC,GAAE,iBAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAOuB,wBAAT,QAA6BC,EAAAA,EAAAA,KAFjC,WAIE,kCAJF,cAOCpB,GACC,SAACqB,EAAA,EAAD,KAEA,iBAAKL,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAOK,IAAKb,EAAOc,IAAKb,KACxC,eAAIM,UAAWC,EAAf,SAAyBP,KAEzB,iBAAKM,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,2BACA,gBAAID,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,WACE,cAAGD,UAAWC,EAAd,qBACA,cAAGD,UAAWC,EAAd,SAAwBN,QAE1B,gBAAIK,UAAWC,EAAf,WACE,cAAGD,UAAWC,EAAd,qBACA,cAAGD,UAAWC,EAAd,SAAwBF,QAE1B,gBAAIC,UAAWC,EAAf,WACE,cAAGD,UAAWC,EAAd,qBACA,cAAGD,UAAWC,EAAd,SAAwBL,QAE1B,gBAAII,UAAWC,EAAf,WACE,cAAGD,UAAWC,EAAd,qBACA,cAAGD,UAAWC,EAAd,SAAwBH,EAAOJ,WAEjC,gBAAIM,UAAWC,EAAf,WACE,cAAGD,UAAWC,EAAd,mBACA,cAAGD,UAAWC,EAAd,SAAwBJ,GAAc,0BAQrD,ECrED,EARsB,WACpB,OACE,+BACE,SAAC,EAAD,KAGL,C,mJCHM,SAAeW,IAAtB,4CAAO,OAAP,oBAAO,6GAEgBC,EAAAA,EAAAA,IAAA,cAFhB,cAEGpB,EAFH,yBAIIA,EAAKC,KAAKoB,KAAKC,OAJnB,gCAMHpB,QAAQqB,MAAR,MANG,gFAUA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA8ByB,GAA9B,gGAEgBJ,EAAAA,EAAAA,IAAA,qBAAwBI,EAAxB,OAFhB,cAEGxB,EAFH,yBAKIA,GALJ,gCAOHE,QAAQqB,MAAR,MAPG,gFAWA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAoCpB,GAApC,gGAGKe,EAAAA,EAAAA,IAAA,oDAAuDf,EAAvD,OAHL,cAEGL,EAFH,yBAKIA,GALJ,gCAOHE,QAAQqB,MAAR,MAPG,gFAvBPH,EAAAA,EAAAA,SAAAA,QAFc,iC","sources":["webpack://rick_and_morty_app/./src/components/CharacterDetails/CharacterDetails.module.scss?6fe0","components/CharacterDetails/CharacterDetails.js","pages/InfoCharacter/InfoCharacter.js","services/apiService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"goBackBtn\":\"CharacterDetails_goBackBtn__AVMM5\",\"containerInfo\":\"CharacterDetails_containerInfo__xwdv4\",\"img\":\"CharacterDetails_img__je7bS\",\"title\":\"CharacterDetails_title__M3VW1\",\"containerDescription\":\"CharacterDetails_containerDescription__TiVJE\",\"subTitle\":\"CharacterDetails_subTitle__FyqXU\",\"list\":\"CharacterDetails_list__eqrRy\",\"item\":\"CharacterDetails_item__qcauy\",\"secr\":\"CharacterDetails_secr__vJveM\",\"value\":\"CharacterDetails_value__5YtFx\"};","import Loader from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport { NavLink, useLocation, useParams } from 'react-router-dom';\nimport { fetchCHaracter } from 'services/apiService';\nimport routes from 'utils/routes';\nimport s from './CharacterDetails.module.scss';\n\nconst CharacterDetails = () => {\n  const [characterObj, setCharacterObj] = useState(null);\n  const { state } = useLocation();\n  const { characterId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getCharacterDetails = async id => {\n    setIsLoading(true);\n    try {\n      const resp = await fetchCHaracter([id]);\n\n      setCharacterObj(resp.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useState(() => {\n    getCharacterDetails(characterId);\n  }, []);\n\n  if (!characterObj) return null;\n\n  const { image, name, gender, species, type, origin, status } = characterObj;\n\n  return (\n    <div>\n      <NavLink\n        className={s.goBackBtn}\n        to={state?.prevLocationPath ?? routes.home}\n      >\n        <b>&#x2190;</b> go back\n      </NavLink>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className={s.containerInfo}>\n          <img className={s.img} src={image} alt={name} />\n          <h2 className={s.title}>{name}</h2>\n\n          <div className={s.containerDescription}>\n            <p className={s.subTitle}>Informations</p>\n            <ul className={s.list}>\n              <li className={s.item}>\n                <p className={s.secr}>Gender</p>\n                <p className={s.value}>{gender}</p>\n              </li>\n              <li className={s.item}>\n                <p className={s.secr}>Status</p>\n                <p className={s.value}>{status}</p>\n              </li>\n              <li className={s.item}>\n                <p className={s.secr}>Specie</p>\n                <p className={s.value}>{species}</p>\n              </li>\n              <li className={s.item}>\n                <p className={s.secr}>Origin</p>\n                <p className={s.value}>{origin.name}</p>\n              </li>\n              <li className={s.item}>\n                <p className={s.secr}>Type</p>\n                <p className={s.value}>{type ? type : 'Unknown'}</p>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CharacterDetails;\n","import CharacterDetails from 'components/CharacterDetails/CharacterDetails';\n\nconst InfoCharacter = () => {\n  return (\n    <>\n      <CharacterDetails />\n    </>\n  );\n};\n\nexport default InfoCharacter;\n","import axios from 'axios';\nconst MAIN_URL = `https://rickandmortyapi.com/api`;\n\naxios.defaults.baseURL = MAIN_URL;\n\nexport async function fetchTotalCountUsers() {\n  try {\n    const resp = await axios.get(`/character`);\n\n    return resp.data.info.count;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCHaracter(arrUsers) {\n  try {\n    const resp = await axios.get(`/character/${arrUsers}\n`);\n\n    return resp;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCHaracterByName(name) {\n  try {\n    const resp =\n      await axios.get(`/character/?gender=&status=&species=&name=${name}\n`);\n    return resp;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["useState","characterObj","setCharacterObj","state","useLocation","characterId","useParams","isLoading","setIsLoading","getCharacterDetails","id","fetchCHaracter","resp","data","console","log","image","name","gender","species","type","origin","status","className","s","to","prevLocationPath","routes","Loader","src","alt","fetchTotalCountUsers","axios","info","count","error","arrUsers","fetchCHaracterByName"],"sourceRoot":""}