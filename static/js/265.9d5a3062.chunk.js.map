{"version":3,"file":"static/js/265.9d5a3062.chunk.js","mappings":"mOAaA,EAbuB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAExB,OACE,wBACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACT,yBACE,uBAAIA,KADGD,EADA,KAOhB,ECQD,EAnBoB,SAAC,GAAgC,IAA9BE,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAMrC,OACE,iBAAMC,OAAO,GAAb,UACE,kBACEC,KAAK,OACLC,YAAY,oBACZL,KAAK,SACLM,QAXW,SAAAC,GACf,IAAMC,EAAQD,EAAEE,OAAOD,MAEvBP,EAAeO,EAChB,EAQKA,MAAON,KAId,E,kBCZM,SAAeQ,IAAtB,4CAAO,OAAP,oBAAO,6GAEgBC,EAAAA,EAAAA,IAAA,cAFhB,cAEGC,EAFH,yBAIIA,EAAKC,KAAKC,KAAKC,OAJnB,gCAMHC,QAAQC,MAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,4FAA4CC,EAA5C,+BAAmD,EAAnD,kBAEgBT,EAAAA,EAAAA,IAAA,qBAAwBQ,EAAxB,iBAAyCC,EAAzC,OAFhB,cAEGR,EAFH,yBAKIA,GALJ,gCAOHI,QAAQC,MAAR,MAPG,iFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAoCrB,GAApC,gGAEgBW,EAAAA,EAAAA,IAAA,2BAA8BX,EAA9B,OAFhB,cAEGY,EAFH,yBAIIA,GAJJ,gCAMHI,QAAQC,MAAR,MANG,gFAvBPN,EAAAA,EAAAA,SAAAA,QAFc,kCCDP,IAAMW,EAAgB,SAAAC,GAQ3B,IAPA,IAAMC,EAAkBC,KAAKC,KAAKH,EAAa,GAC3CI,EAAqBC,MAAMC,KAC7B,CAAEC,OAAQN,IACV,SAAAO,GAAE,MAAU,EAAV,IAGAC,EAAW,EACNC,EAAI,EAAGA,GAAKV,EAAYU,IAC/BN,EAAmBK,GAAUE,KAAKD,GACU,IAAxCN,EAAmBK,GAAUF,SAC/BE,GAAY,GAIhB,OAAOL,CACR,E,SC8ED,EAjFa,WACX,OAAoCQ,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOf,EAAP,KAAakB,EAAb,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOtC,EAAP,KAAc0C,EAAd,KACA,ECf6B,SAACC,EAAKC,GAAkB,IAAD,EACpD,GAAwBN,EAAAA,EAAAA,UAAQ,UAC9BO,KAAKC,MAAMC,aAAaC,QAAQL,WADF,QACWC,GAD3C,eAAO5B,EAAP,KAAaiC,EAAb,KAQA,OAJAC,EAAAA,EAAAA,YAAU,WACRH,aAAaI,QAAQR,EAAKE,KAAKO,UAAUpC,GAC1C,GAAE,CAACA,EAAM2B,IAEH,CAAC3B,EAAMiC,EACf,CDK6BI,CAAgB,aAAc,IAA1D,eAAOhD,EAAP,KAAeiD,EAAf,KAMMC,EAAY,mCAAG,6GAEQ1C,IAFR,OAEX2C,EAFW,OAGjBhB,EAAcf,EAAc+B,IAHX,gDAKjBrC,QAAQsC,IAAR,MALiB,yDAAH,qDAQZC,EAAmB,mCAAG,WAAMvD,GAAN,kGAEDqB,EAAqBrB,GAFpB,gBAEhBa,EAFgB,EAEhBA,KACRwB,EAAcf,EAAcT,EAAKC,KAAKC,QAEtCwB,EAAS1B,EAAK2C,QAAQ1B,OAASjB,EAAK2C,QAAU,CAAC3C,EAAK2C,UAL5B,gDASxBxC,QAAQsC,IAAI,iBAAkB,KAAIG,SAC9B,KAAIA,QAAQC,SAAZ,wCACFnB,EAAS,IACTF,EAAc,KAZQ,yDAAH,uDAkBzBU,EAAAA,EAAAA,YAAU,WACRT,EAAQ,GACHpC,EAGHqD,EAAoBrD,GAFpBkD,GAIH,GAAE,CAAClD,IAEJ,IAAMyD,EAAgB,mCAAG,WAAOC,EAAYxC,GAAnB,kGAEEF,EAAmB0C,EAAYxC,GAFjC,gBAEbP,EAFa,EAEbA,KAER0B,EAAS1B,EAAKiB,OAASjB,EAAO,CAACA,IAJV,gDAQrBG,QAAQ6C,IAAR,MARqB,yDAAH,wDAkBtB,OANAd,EAAAA,EAAAA,YAAU,WACJX,EAAWN,OAAS,GACtB6B,EAAiBvB,EAAWhB,EAAO,GAAIA,EAE1C,GAAE,CAACgB,EAAYhB,KAGd,iCACE,0BACE,gBAAK0C,IAAKC,EAAMC,IAAI,YAEtB,SAAC,EAAD,CAAa/D,eAAgBkD,EAAWjD,OAAQA,KAChD,SAAC,EAAD,CAAgBL,MAAOA,IACtBuC,EAAWN,OAAS,IACnB,SAACmC,EAAA,EAAD,CACElD,MAAOqB,EAAWN,OAClBV,KAAMA,EACN8C,SApEa,SAAC3D,EAAG4D,GACvB7B,EAAQ6B,EACT,MAuEF,C","sources":["components/CharactersList/CharactersList.js","components/FilterInput/FilterInput.js","services/apiService.js","utils/getUsersIdArr.js","pages/Home/Home.js","hooks/useLocalStorage.js"],"sourcesContent":["const CharactersList = ({ users }) => {\n  // console.log('users :', users);\n  return (\n    <ul>\n      {users.map(({ id, name }) => (\n        <li key={id}>\n          <p>{name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default CharactersList;\n","const FilterInput = ({ onChangeFilter, filter }) => {\n  const onChange = e => {\n    const value = e.target.value;\n\n    onChangeFilter(value);\n  };\n  return (\n    <form action=\"\">\n      <input\n        type=\"text\"\n        placeholder=\"Filter by name...\"\n        name=\"filter\"\n        onInput={onChange}\n        value={filter}\n      />\n    </form>\n  );\n};\n\nexport default FilterInput;\n","import axios from 'axios';\nconst MAIN_URL = `https://rickandmortyapi.com/api`;\n\naxios.defaults.baseURL = MAIN_URL;\n\nexport async function fetchTotalCountUsers() {\n  try {\n    const resp = await axios.get(`/character`);\n\n    return resp.data.info.count;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchAllCHaracters(arrUsers, page = 1) {\n  try {\n    const resp = await axios.get(`/character/${arrUsers}?page=${page}\n`);\n\n    return resp;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCHaracterByName(name) {\n  try {\n    const resp = await axios.get(`/character/?name=${name}\n`);\n    return resp;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","export const getUsersIdArr = totalUsers => {\n  const countArrsUserId = Math.ceil(totalUsers / 8);\n  let arrWithArrsUsersId = Array.from(\n    { length: countArrsUserId },\n    el => (el = [])\n  );\n\n  let indexArr = 0;\n  for (let i = 1; i <= totalUsers; i++) {\n    arrWithArrsUsersId[indexArr].push(i);\n    if (arrWithArrsUsersId[indexArr].length === 8) {\n      indexArr += 1;\n    }\n  }\n\n  return arrWithArrsUsersId;\n};\n","import { Pagination } from '@mui/material';\nimport CharactersList from 'components/CharactersList/CharactersList';\nimport FilterInput from 'components/FilterInput/FilterInput';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\nimport { useEffect, useState } from 'react';\nimport {\n  fetchAllCHaracters,\n  fetchCHaracterByName,\n  fetchTotalCountUsers,\n} from 'services/apiService';\nimport { getUsersIdArr } from 'utils/getUsersIdArr';\nimport logo from '../../assets/images/logo.webp';\n\nconst Home = () => {\n  const [arrWithIds, setArrWithIds] = useState([]);\n  const [page, setPage] = useState(1);\n  const [users, setUsers] = useState([]);\n  const [filter, setFilter] = useLocalStorage('filter_r&m', '');\n\n  const onChangePage = (e, p) => {\n    setPage(p);\n  };\n\n  const getArrWithId = async () => {\n    try {\n      const countUsers = await fetchTotalCountUsers();\n      setArrWithIds(getUsersIdArr(countUsers));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getCharactersByName = async name => {\n    try {\n      const { data } = await fetchCHaracterByName(name);\n      setArrWithIds(getUsersIdArr(data.info.count));\n\n      setUsers(data.results.length ? data.results : [data.results]);\n\n      //   console.log('resp :', { data });\n    } catch (err) {\n      console.log('err.messages :', err.message);\n      if (err.message.includes(`Cannot destructure property 'data'`)) {\n        setUsers([]);\n        setArrWithIds([]);\n      }\n      //   console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    setPage(1);\n    if (!filter) {\n      getArrWithId();\n    } else {\n      getCharactersByName(filter);\n    }\n  }, [filter]);\n\n  const getAllCharacters = async (arrUsersId, page) => {\n    try {\n      const { data } = await fetchAllCHaracters(arrUsersId, page);\n\n      setUsers(data.length ? data : [data]);\n\n      //   console.log('data :');\n    } catch (error) {\n      console.dir(error);\n    }\n  };\n\n  useEffect(() => {\n    if (arrWithIds.length > 0) {\n      getAllCharacters(arrWithIds[page - 1], page);\n    }\n  }, [arrWithIds, page]);\n\n  return (\n    <>\n      <div>\n        <img src={logo} alt=\"logo\" />\n      </div>\n      <FilterInput onChangeFilter={setFilter} filter={filter} />\n      <CharactersList users={users} />\n      {arrWithIds.length > 1 && (\n        <Pagination\n          count={arrWithIds.length}\n          page={page}\n          onChange={onChangePage}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from 'react';\n\nexport const useLocalStorage = (key, initialState) => {\n  const [data, setData] = useState(\n    JSON.parse(localStorage.getItem(key)) ?? initialState\n  );\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(data));\n  }, [data, key]);\n\n  return [data, setData];\n};\n"],"names":["users","map","id","name","onChangeFilter","filter","action","type","placeholder","onInput","e","value","target","fetchTotalCountUsers","axios","resp","data","info","count","console","error","fetchAllCHaracters","arrUsers","page","fetchCHaracterByName","getUsersIdArr","totalUsers","countArrsUserId","Math","ceil","arrWithArrsUsersId","Array","from","length","el","indexArr","i","push","useState","arrWithIds","setArrWithIds","setPage","setUsers","key","initialState","JSON","parse","localStorage","getItem","setData","useEffect","setItem","stringify","useLocalStorage","setFilter","getArrWithId","countUsers","log","getCharactersByName","results","message","includes","getAllCharacters","arrUsersId","dir","src","logo","alt","Pagination","onChange","p"],"sourceRoot":""}