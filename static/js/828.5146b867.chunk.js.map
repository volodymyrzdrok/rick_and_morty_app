{"version":3,"file":"static/js/828.5146b867.chunk.js","mappings":"qLAEaA,EAAkB,SAACC,EAAKC,GAAkB,IAAD,EACpD,GAAwBC,EAAAA,EAAAA,UAAQ,UAC9BC,KAAKC,MAAMC,aAAaC,QAAQN,WADF,QACWC,GAD3C,eAAOM,EAAP,KAAaC,EAAb,KAQA,OAJAC,EAAAA,EAAAA,YAAU,WACRJ,aAAaK,QAAQV,EAAKG,KAAKQ,UAAUJ,GAC1C,GAAE,CAACA,EAAMP,IAEH,CAACO,EAAMC,EACf,C,sGCCYI,GAAMC,E,QAAAA,IAVI,CACrBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAKIC,EAAqB,IAAIC,EAAAA,G,SCwBtC,EAjCkB,WAChB,IAAMC,GAAOC,EAAAA,EAAAA,IAAQX,GACrB,GAAwBb,EAAAA,EAAAA,GAAgB,WAAYuB,EAAKE,aAAzD,eAAOC,EAAP,KAAaC,EAAb,KAuBA,OAFAC,QAAQC,IAAI,UAAWH,IAGrB,4BACE,mBAAQI,QAtBU,WAapB,OAZcP,EAAKQ,oBAAmB,SAAAC,GACpC,GAAIA,EACF,OAAOL,EAAQK,IAEjBC,EAAAA,EAAAA,IAAgBV,EAAMF,GACnBa,MAAK,SAAAC,GAEJR,EAAQQ,EAAYT,KACrB,IACAU,OAAM,SAAAC,GAAG,OAAIT,QAAQC,IAAIQ,EAAhB,GACb,GAGF,EAQG,qBACA,mBAAQP,QAPG,WAAQ,EAOnB,uBAGL,ECzBD,G,QARc,WACZ,OACE,+BACE,SAAC,EAAD,KAGL,E","sources":["hooks/useLocalStorage.js","services/firebase.js","components/LoginComp/LoginComp.js","pages/Login/Login.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useLocalStorage = (key, initialState) => {\n  const [data, setData] = useState(\n    JSON.parse(localStorage.getItem(key)) ?? initialState\n  );\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(data));\n  }, [data, key]);\n\n  return [data, setData];\n};\n","import { initializeApp } from 'firebase/app';\nimport { GoogleAuthProvider } from 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCRLztn9UYZ7km2LSehMgGdwznEeg3mSko',\n  authDomain: 'rick-and-morty-b62bd.firebaseapp.com',\n  projectId: 'rick-and-morty-b62bd',\n  storageBucket: 'rick-and-morty-b62bd.appspot.com',\n  messagingSenderId: '495852158541',\n  appId: '1:495852158541:web:0641d53342db7a122de604',\n};\n\n//  Facebook https://rick-and-morty-b62bd.firebaseapp.com/__/auth/handler\nexport const app = initializeApp(firebaseConfig);\nexport const googleAuthProvider = new GoogleAuthProvider();\n","import { useLocalStorage } from 'hooks/useLocalStorage';\nimport { getAuth, signInWithPopup } from 'firebase/auth';\nimport { app, googleAuthProvider } from 'services/firebase';\n// import { useState } from 'react';\n\nconst LoginComp = () => {\n  const auth = getAuth(app);\n  const [user, setUser] = useLocalStorage('r&m_user', auth.currentUser);\n  // const [user, setUser] = useState(auth.currentUser);\n\n  const loginByGoogle = () => {\n    const unsub = auth.onAuthStateChanged(maybeUser => {\n      if (maybeUser) {\n        return setUser(maybeUser);\n      }\n      signInWithPopup(auth, googleAuthProvider)\n        .then(credentials => {\n          // console.log('credentiols :', credentials);\n          setUser(credentials.user);\n        })\n        .catch(err => console.log(err));\n    });\n\n    return unsub;\n  };\n\n  const logOut = () => {};\n\n  console.log('user  :', user);\n\n  return (\n    <div>\n      <button onClick={loginByGoogle}>google</button>\n      <button onClick={logOut}>log Out</button>\n    </div>\n  );\n};\n\nexport default LoginComp;\n","import LoginComp from 'components/LoginComp/LoginComp';\nimport React from 'react';\n\nconst Login = () => {\n  return (\n    <>\n      <LoginComp />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["useLocalStorage","key","initialState","useState","JSON","parse","localStorage","getItem","data","setData","useEffect","setItem","stringify","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","googleAuthProvider","GoogleAuthProvider","auth","getAuth","currentUser","user","setUser","console","log","onClick","onAuthStateChanged","maybeUser","signInWithPopup","then","credentials","catch","err"],"sourceRoot":""}